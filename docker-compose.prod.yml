version: '3.8'

services:
  web:
    build:
      context: ./sts_crm
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    env_file:
      - ./env.prod
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    depends_on:
      - db
      - redis_broker

    restart: always

  daphne:
    build:
      context: ./sts_crm
      dockerfile: Dockerfile.prod
    command: daphne -b 0.0.0.0 -p 8001  config.asgi:application  
    expose:
      - 8000
    env_file:
      - ./env.prod
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    depends_on:
      - db
      - redis_broker

    restart: always

  

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./env.prod.db
    
    restart: always
 
      

  redis_broker:
    image: redis:7.0.4
    ports:
      - 6379:6379
    
    volumes:
      - redis_cache:/var/lib/redis/data/

    restart: always
  
  
  nginx:
    build: ./nginx
    ports:
      - 80:80
    depends_on:
      - web
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media

    restart: always


  celery:
    build: 
      context: ./sts_crm
      dockerfile: Dockerfile.prod
    command: celery -A config worker --loglevel=info

    env_file:
      - ./env.prod

    depends_on:
      - web
      - rabbitmq

    restart: always

  celery_beat:
    build: 
      context: ./sts_crm
      dockerfile: Dockerfile.prod
    command: celery -A config beat -l info  -S django

    env_file:
      - ./env.prod

    depends_on:
      - web
      - rabbitmq

    restart: always

  rabbitmq:
    hostname: rabbitmq
    image: "rabbitmq:3-management"

    env_file:
      - ./env.prod.rabbitmq

    restart: always

volumes:
  postgres_data:
  redis_cache:
  static_volume:
  media_volume: