# Generated by Django 4.2.5 on 2024-02-26 20:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^998\\d{2}\\s*?\\d{3}\\s*?\\d{4}$')], verbose_name='phone')),
                ('shop_password', models.CharField(blank=True, max_length=200, null=True)),
                ('vendor_user', models.BooleanField(blank=True, default=False, verbose_name='vendor user')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='last name')),
                ('author', models.BooleanField(blank=True, default=False, verbose_name='author')),
                ('special_user', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Special User')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('two_step_password', models.BooleanField(default=False, help_text='is active two step password?', verbose_name='two step password')),
                ('userActive', models.BooleanField(blank=True, default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneOtp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^998\\d{2}\\s*?\\d{3}\\s*?\\d{4}$')], verbose_name='phone')),
                ('otp', models.CharField(max_length=6)),
                ('count', models.PositiveSmallIntegerField(default=0, help_text='Number of otp sent')),
                ('verify', models.BooleanField(default=False, verbose_name='is verify')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_nuber', models.CharField(max_length=13)),
                ('address_line_1', models.TextField()),
                ('town_city', models.TextField(help_text='Enter residing city or town')),
                ('state', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
    ]
